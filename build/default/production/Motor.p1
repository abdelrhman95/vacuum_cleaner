Version 4.0 HI-TECH Software Intermediate Code
"38 Motor.c
[; ;Motor.c: 38: static tVC_Motor_speed Target_firing_angle;
[c E850 140 90 10 .. ]
[n E850 . Min_speed Mid_speed Max_speed  ]
"41
[; ;Motor.c: 41: static Mot_states motor_state;
[c E863 0 1 .. ]
[n E863 . Mot_normal_state Mot_Switching_state  ]
"278 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 278: extern volatile unsigned char PORTC __attribute__((address(0x007)));
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"1437
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1437: extern volatile unsigned char TRISC __attribute__((address(0x087)));
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"35 Motor.c
[; ;Motor.c: 35: static uint8 Actual_angle;
[v _Actual_angle `uc ~T0 @X0 1 s ]
"38
[; ;Motor.c: 38: static tVC_Motor_speed Target_firing_angle;
[v _Target_firing_angle `E850 ~T0 @X0 1 s ]
"41
[; ;Motor.c: 41: static Mot_states motor_state;
[v _motor_state `E863 ~T0 @X0 1 s ]
"45
[; ;Motor.c: 45: static uint8 Switching_Counter ;
[v _Switching_Counter `uc ~T0 @X0 1 s ]
"48
[; ;Motor.c: 48: void MOT_Init(tVC_Motor_speed M)
[v _MOT_Init `(v ~T0 @X0 1 ef1`E850 ]
"49
[; ;Motor.c: 49: {
{
[e :U _MOT_Init ]
"48
[; ;Motor.c: 48: void MOT_Init(tVC_Motor_speed M)
[v _M `E850 ~T0 @X0 1 r1 ]
"49
[; ;Motor.c: 49: {
[f ]
"52
[; ;Motor.c: 52:     ((((PORTC))) = (((PORTC)) & (~(1 << ((3)))))|((0) << ((3))));
[e = _PORTC -> | & -> _PORTC `i ~ << -> 1 `i -> 3 `i << -> 0 `i -> 3 `i `uc ]
"53
[; ;Motor.c: 53:     ((((TRISC))) = (((TRISC)) & (~(1 << ((3)))))|(0 << ((3))));
[e = _TRISC -> | & -> _TRISC `i ~ << -> 1 `i -> 3 `i << -> 0 `i -> 3 `i `uc ]
"57
[; ;Motor.c: 57:     Actual_angle = (170);
[e = _Actual_angle -> -> 170 `i `uc ]
"60
[; ;Motor.c: 60:     Target_firing_angle = M;
[e = _Target_firing_angle _M ]
"63
[; ;Motor.c: 63:     motor_state = Mot_Switching_state;
[e = _motor_state . `E863 1 ]
"66
[; ;Motor.c: 66:     Switching_Counter = 0;
[e = _Switching_Counter -> -> 0 `i `uc ]
"68
[; ;Motor.c: 68: }
[e :UE 95 ]
}
"71
[; ;Motor.c: 71: void MOT_Update(void)
[v _MOT_Update `(v ~T0 @X0 1 ef ]
"72
[; ;Motor.c: 72: {
{
[e :U _MOT_Update ]
[f ]
"74
[; ;Motor.c: 74:     static uint8 motor_tick_counter = 10;
[v F886 `uc ~T0 @X0 1 s motor_tick_counter ]
[i F886
-> -> 10 `i `uc
]
"77
[; ;Motor.c: 77:     motor_tick_counter += (10);
[e =+ F886 -> -> 10 `i `uc ]
"80
[; ;Motor.c: 80:     if(motor_tick_counter != (20)) return;
[e $ ! != -> F886 `i -> 20 `i 97  ]
[e $UE 96  ]
[e :U 97 ]
"83
[; ;Motor.c: 83:     motor_tick_counter = 0;
[e = F886 -> -> 0 `i `uc ]
"86
[; ;Motor.c: 86:     switch(motor_state)
[e $U 99  ]
"87
[; ;Motor.c: 87:     {
{
"88
[; ;Motor.c: 88:         case Mot_normal_state:
[e :U 100 ]
"92
[; ;Motor.c: 92:             if(Actual_angle > Target_firing_angle)
[e $ ! > -> _Actual_angle `ui -> _Target_firing_angle `ui 101  ]
"93
[; ;Motor.c: 93:             {
{
"96
[; ;Motor.c: 96:                 Actual_angle -= (10);
[e =- _Actual_angle -> -> 10 `i `uc ]
"97
[; ;Motor.c: 97:             }
}
[e $U 102  ]
"99
[; ;Motor.c: 99:             else
[e :U 101 ]
"100
[; ;Motor.c: 100:             {
{
"103
[; ;Motor.c: 103:                 Actual_angle += (10);
[e =+ _Actual_angle -> -> 10 `i `uc ]
"104
[; ;Motor.c: 104:             }
}
[e :U 102 ]
"106
[; ;Motor.c: 106:             break;
[e $U 98  ]
"108
[; ;Motor.c: 108:         case Mot_Switching_state:
[e :U 103 ]
"111
[; ;Motor.c: 111:             if(Actual_angle == Target_firing_angle)
[e $ ! == -> _Actual_angle `ui -> _Target_firing_angle `ui 104  ]
"112
[; ;Motor.c: 112:             {
{
"116
[; ;Motor.c: 116:                 Actual_angle +=5;
[e =+ _Actual_angle -> -> 5 `i `uc ]
"117
[; ;Motor.c: 117:                 motor_state = Mot_normal_state;
[e = _motor_state . `E863 0 ]
"118
[; ;Motor.c: 118:             }
}
[e $U 105  ]
"119
[; ;Motor.c: 119:             else
[e :U 104 ]
"120
[; ;Motor.c: 120:             {
{
"124
[; ;Motor.c: 124:                  Switching_Counter += (20);
[e =+ _Switching_Counter -> -> 20 `i `uc ]
"126
[; ;Motor.c: 126:                 if((40) == Switching_Counter)
[e $ ! == -> 40 `i -> _Switching_Counter `i 106  ]
"127
[; ;Motor.c: 127:                 {
{
"133
[; ;Motor.c: 133:                      if(Actual_angle < Target_firing_angle)
[e $ ! < -> _Actual_angle `ui -> _Target_firing_angle `ui 107  ]
"134
[; ;Motor.c: 134:                      {
{
"135
[; ;Motor.c: 135:                          Actual_angle ++ ;
[e ++ _Actual_angle -> -> 1 `i `uc ]
"137
[; ;Motor.c: 137:                      }
}
[e $U 108  ]
"139
[; ;Motor.c: 139:                      else
[e :U 107 ]
"140
[; ;Motor.c: 140:                      {
{
"142
[; ;Motor.c: 142:                          Actual_angle --;
[e -- _Actual_angle -> -> 1 `i `uc ]
"143
[; ;Motor.c: 143:                      }
}
[e :U 108 ]
"145
[; ;Motor.c: 145:                      Switching_Counter = 0 ;
[e = _Switching_Counter -> -> 0 `i `uc ]
"146
[; ;Motor.c: 146:                 }
}
[e :U 106 ]
"148
[; ;Motor.c: 148:             }
}
[e :U 105 ]
"149
[; ;Motor.c: 149:                  break;
[e $U 98  ]
"150
[; ;Motor.c: 150:         default:
[e :U 109 ]
"151
[; ;Motor.c: 151:           break;
[e $U 98  ]
"153
[; ;Motor.c: 153:     }
}
[e $U 98  ]
[e :U 99 ]
[e [\ -> _motor_state `ui , $ -> . `E863 0 `ui 100
 , $ -> . `E863 1 `ui 103
 109 ]
[e :U 98 ]
"155
[; ;Motor.c: 155: }
[e :UE 96 ]
}
"160
[; ;Motor.c: 160: void MOT_SetTargetAngle(tVC_Motor_speed M)
[v _MOT_SetTargetAngle `(v ~T0 @X0 1 ef1`E850 ]
"161
[; ;Motor.c: 161: {
{
[e :U _MOT_SetTargetAngle ]
"160
[; ;Motor.c: 160: void MOT_SetTargetAngle(tVC_Motor_speed M)
[v _M `E850 ~T0 @X0 1 r1 ]
"161
[; ;Motor.c: 161: {
[f ]
"167
[; ;Motor.c: 167:     if(Target_firing_angle == M)
[e $ ! == -> _Target_firing_angle `ui -> _M `ui 111  ]
"168
[; ;Motor.c: 168:     {
{
"169
[; ;Motor.c: 169:         return;
[e $UE 110  ]
"170
[; ;Motor.c: 170:     }
}
[e :U 111 ]
"175
[; ;Motor.c: 175:     motor_state = Mot_Switching_state;
[e = _motor_state . `E863 1 ]
"176
[; ;Motor.c: 176:     Target_firing_angle = M;
[e = _Target_firing_angle _M ]
"178
[; ;Motor.c: 178: }
[e :UE 110 ]
}
"183
[; ;Motor.c: 183: uint8 Get_actual(void)
[v _Get_actual `(uc ~T0 @X0 1 ef ]
"184
[; ;Motor.c: 184: {
{
[e :U _Get_actual ]
[f ]
"185
[; ;Motor.c: 185:     return Actual_angle;
[e ) _Actual_angle ]
[e $UE 112  ]
"186
[; ;Motor.c: 186: }
[e :UE 112 ]
}
"189
[; ;Motor.c: 189: void Firing_Pulse(void)
[v _Firing_Pulse `(v ~T0 @X0 1 ef ]
"190
[; ;Motor.c: 190: {
{
[e :U _Firing_Pulse ]
[f ]
"192
[; ;Motor.c: 192:     ((((PORTC))) = (((PORTC)) & (~(1 << ((3)))))|(1 << ((3))));
[e = _PORTC -> | & -> _PORTC `i ~ << -> 1 `i -> 3 `i << -> 1 `i -> 3 `i `uc ]
"194
[; ;Motor.c: 194:     _delay((unsigned long)(((100))*(8000000/4000000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
"196
[; ;Motor.c: 196:      ((((PORTC))) = (((PORTC)) & (~(1 << ((3)))))|(0 << ((3))));
[e = _PORTC -> | & -> _PORTC `i ~ << -> 1 `i -> 3 `i << -> 0 `i -> 3 `i `uc ]
"198
[; ;Motor.c: 198: }
[e :UE 113 ]
}
